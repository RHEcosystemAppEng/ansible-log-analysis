apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "backend.fullname" . }}-init
  labels:
    {{- include "backend.labels" . | nindent 4 }}
    app.kubernetes.io/component: init
  # annotations:
  #   "helm.sh/hook": pre-install,pre-upgrade
  #   "helm.sh/hook-weight": "-5"
  #   "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: init
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-postgres
          image: postgres:15-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -d "$DATABASE_URL"; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 5
              done
              echo "PostgreSQL is ready!"
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: pgvector
                  key: uri
        - name: wait-for-phoenix
          image: quay.io/openshift/origin-cli:4.15
          command:
            - sh
            - -c
            - |
              echo "Waiting for Phoenix deployment to be ready..."
              until oc rollout status deployment/{{ .Release.Name }}-phoenix -n {{ .Release.Namespace }} --timeout=10s; do
                echo "Still waiting..."
                sleep 3
              done
              echo "Phoenix service is ready!"
      containers:
        - name: init-pipeline
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "init_pipeline.py"]
          {{- if .Values.env }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
          envFrom:
          {{- if .Values.config }}
            - configMapRef:
                name: {{ include "backend.fullname" . }}-config
            - secretRef:
                name: model-secret
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  backoffLimit: 3
