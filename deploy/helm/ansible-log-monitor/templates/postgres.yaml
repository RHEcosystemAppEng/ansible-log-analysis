{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    app: {{ .Values.postgres.name }}
    chart: {{ include "ansible-log-monitor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Values.postgres.name }}
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgres
          containerPort: {{ .Values.postgres.service.port }}
          protocol: TCP
        env:
        {{- range .Values.postgres.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        volumeMounts:
        {{- if .Values.postgres.persistence.enabled }}
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        {{- end }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ (index .Values.postgres.env 0).value }}
            - -d
            - {{ (index .Values.postgres.env 2).value }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ (index .Values.postgres.env 0).value }}
            - -d
            - {{ (index .Values.postgres.env 2).value }}
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      {{- if .Values.postgres.persistence.enabled }}
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.name }}-pvc
      {{- else }}
      - name: postgres-data
        emptyDir: {}
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgres.name }}
  labels:
    app: {{ .Values.postgres.name }}
    chart: {{ include "ansible-log-monitor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  type: {{ .Values.postgres.service.type }}
  ports:
    - port: {{ .Values.postgres.service.port }}
      targetPort: {{ .Values.postgres.service.port }}
      protocol: TCP
      name: postgres
  selector:
    app: {{ .Values.postgres.name }}
    release: {{ .Release.Name }}

---
{{- if .Values.postgres.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.postgres.name }}-pvc
  labels:
    app: {{ .Values.postgres.name }}
    chart: {{ include "ansible-log-monitor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  accessModes:
    - {{ .Values.postgres.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
  {{- if .Values.global.storageClass }}
  storageClassName: {{ .Values.global.storageClass }}
  {{- end }}
{{- end }}
{{- end }}
