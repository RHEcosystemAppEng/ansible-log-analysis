apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.backend.name }}-init-db
  labels:
    app: {{ .Values.backend.name }}-init
    chart: {{ include "ansible-log-monitor.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}-init
        release: {{ .Release.Name }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.backend.name }}-sa
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: 
        - sh
        - -c
        - |
          until nc -z {{ .Values.postgres.name }} {{ .Values.postgres.service.port }}; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
      containers:
      - name: init-db
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        command: 
        - sh
        - -c
        - |
          echo "Initializing database tables..."
          python init_df.py
        env:
        {{- range .Values.backend.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        {{- if .Values.backend.envFrom }}
        envFrom:
        {{- toYaml .Values.backend.envFrom | nindent 8 }}
        {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
